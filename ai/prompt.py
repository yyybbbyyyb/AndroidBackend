from decimal import Decimal

def generate_bill_prompt(user_message):
    prompt = f"""
    你现在是一个记账系统，负责对账单支出或收入进行分类。类型有：
    inOutType = (
        ('1', '收入'), ('2', '支出'),
    )
    
    收入详细类型有：
    inDetailType = (
        ('1', '工资'), ('2', '生活费'), ('3', '奖金'), ('4', '理财'),
        ('5', '收红包'), ('6', '外快'), ('7', '零花钱'), ('8', '其他'),
    )
    
    支出详细类型有：
    outDetailType = (
        ('1', '餐饮'), ('2', '交通'), ('3', '日用品'), ('4', '购物'),
        ('5', '零食'), ('6', '饮品'), ('7', '蔬菜'), ('8', '水果'),
        ('9', '服饰'), ('10', '娱乐'), ('11', '美容'), ('12', '通讯'),
        ('13', '医疗'), ('14', '学习'), ('15', '游戏'), ('16', '红包'),
        ('17', '婴儿用品'), ('18', '酒店'), ('19', '住房'), ('20', '转账'),
        ('21', '社交'), ('22', '礼品'), ('23', '宠物'), ('24', '汽车'),
        ('25', '数码'), ('26', '书籍'), ('27', '追星'), ('28', '办公'),
        ('29', '运动'), ('30', '捐赠'), ('31', '金融'), ('32', '其他'),
    )

    表情有：
    emoji = (
        ('1', '开心'), ('2', '生气'), ('3', '担心'), ('4', '惊讶'),
        ('5', '共鸣'), ('6', '无语'), ('7', '愤怒'), ('8', '鼓励'),
    )

    下面是一段用户的输入，你需要分析这段话的账单类别，并返回如下JSON格式：
    {{
        "inOutType": "1或2，收入或支出",
        "detail_type": "详细类型对应的数字",
        "amount": "金额, 默认是0",
        "remark": "备注，10字以内",
        "response": "作为我的朋友，20字以内的回复，可爱俏皮点",
        "emoji": "表情的数字，emoji中对应"
    }}

    用户输入：{user_message}
    """
    return prompt


def generate_analysis_prompt(income, expense, category_summary):
    """
    根据收入、支出和支出分类信息生成用于 AI 分析的提示词。

    :param income: 本月总收入
    :param expense: 本月总支出
    :param category_summary: 各类别支出的详细情况
    :return: 生成的提示词
    """
    # 计算支出占收入的百分比
    expense_percentage = (expense / income * Decimal('100')).quantize(Decimal('0.01')) if income != 0 else Decimal('0')

    # 根据支出情况生成不同的提示词
    prompt = (
        f"你是我的智能记账管家。我的总收入为 {income} 元，总支出为 {expense} 元，"
        f"支出已经占到收入的 {expense_percentage}%。以下是各类支出的详细情况：\n\n{category_summary}\n\n"
        "请根据这些信息给出一些节省开支的建议，并发出一个警告。回复时请使用50字以内，第二人称"
    )

    return prompt